[build]
builder = "nixpacks"
watchPatterns = ["src/**/*.ts", "package.json", "tsconfig.json"]

[deploy]
healthcheckPath = "/api/health"
healthcheckTimeout = 600
restartPolicyType = "ON_FAILURE"
restartPolicyMaxRetries = 5

[[services]]
name = "business-portal-backend"

[services.environment]
NODE_ENV = "production"
PORT = "${{railway.port}}"

# Database - Railway PostgreSQL plugin will provide these
DATABASE_URL = "${{Postgres.DATABASE_URL}}"
DB_HOST = "${{Postgres.PGHOST}}"
DB_PORT = "${{Postgres.PGPORT}}"
DB_USERNAME = "${{Postgres.PGUSER}}"
DB_PASSWORD = "${{Postgres.PGPASSWORD}}"
DB_DATABASE = "${{Postgres.PGDATABASE}}"

# JWT Configuration
JWT_SECRET = "${{JWT_SECRET}}"

# Mail Configuration
MAIL_HOST = "${{MAIL_HOST}}"
MAIL_PORT = "${{MAIL_PORT}}"
MAIL_SECURE = "false"
MAIL_USER = "${{MAIL_USER}}"
MAIL_PASSWORD = "${{MAIL_PASSWORD}}"
MAIL_FROM_NAME = "Nexus Business Portal"
MAIL_FROM_ADDRESS = "${{MAIL_FROM_ADDRESS}}"

# Encryption
ENCRYPTION_KEY = "${{ENCRYPTION_KEY}}"
ENCRYPTION_IV = "${{ENCRYPTION_IV}}"

# Keycloak Configuration - will be updated with Railway URLs
KEYCLOAK_URL = "${{KEYCLOAK_URL}}"
KEYCLOAK_REALM = "nexus-portal"
KEYCLOAK_CLIENT_ID = "business-portal"
KEYCLOAK_ADMIN_USERNAME = "${{KEYCLOAK_ADMIN_USERNAME}}"
KEYCLOAK_ADMIN_PASSWORD = "${{KEYCLOAK_ADMIN_PASSWORD}}"
KEYCLOAK_REDIRECT_URI = "${{FRONTEND_URL}}/auth/callback"

# Keycloak Role Configuration
SCOP_NAME = "b2b-order-management"
KEY = "b2b_roles"
ROLE = "Owner_Admin"

# Cloudinary Configuration
CLOUDINARY_CLOUD_NAME = "${{CLOUDINARY_CLOUD_NAME}}"
CLOUDINARY_API_KEY = "${{CLOUDINARY_API_KEY}}"
CLOUDINARY_API_SECRET = "${{CLOUDINARY_API_SECRET}}"

# Super Admin Configuration
SUPER_ADMIN_EMAIL = "${{SUPER_ADMIN_EMAIL}}"
SUPER_ADMIN_PASSWORD = "${{SUPER_ADMIN_PASSWORD}}"
SUPER_ADMIN_FIRST_NAME = "${{SUPER_ADMIN_FIRST_NAME}}"
SUPER_ADMIN_LAST_NAME = "${{SUPER_ADMIN_LAST_NAME}}"
SUPER_ADMIN_KEYCLOACK_ID = ""

# Frontend URL - will be set after frontend deployment
FRONTEND_URL = "${{FRONTEND_URL}}"

[services.build]
command = "npm run build"

[services.start]
command = "npm run start:prod" 